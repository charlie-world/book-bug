buildscript {
	ext {
		springBootVersion = '2.1.6.RELEASE'
		mooworkVersion = '1.2.0'
	}

	repositories {
		mavenLocal()
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.moowork.gradle:gradle-node-plugin:${mooworkVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'application'

mainClassName = 'com.charlieworld.bookbug.BookbugApplication'
group = 'com.charlieworld'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	compile 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
}

def webappDir = "$projectDir/frontend/bookbug"

node {
	version = '12.6.0'
	download=true
	workDir = file("${project.buildDir}/nodejs")
	npmWorkDir=file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
	workingDir = file("${project.projectDir}/frontend/bookbug")
	args = ["install"]
}

task yarnBuild(type: YarnTask) {
	workingDir = file("${project.projectDir}/frontend/bookbug")
	args = ['build']
}

task copyWebApp(type: Copy) {
	from "frontend/bookbug/build"
	into 'build/resources/main/static/.'
}

yarnBuild.dependsOn appNpmInstall
copyWebApp.dependsOn yarnBuild
compileJava.dependsOn copyWebApp
